import com.pubnub.components.buildsrc.Libs
import com.pubnub.components.buildsrc.Urls
import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

apply plugin: "com.github.ben-manes.versions"

buildscript {
    repositories {
        mavenLocal()
        google()
        mavenCentral()
        gradlePluginPortal()
    }
    dependencies {
        classpath(Libs.androidGradlePlugin)
        classpath(Libs.Kotlin.gradlePlugin)
        classpath(Libs.Hilt.gradlePlugin)
        classpath(Libs.gradleVersionsPlugin)
    }
}

allprojects {
    repositories {
        mavenLocal()
        google()
        mavenCentral()
        maven { url "https://jitpack.io" }

        if (!Libs.AndroidX.Compose.snapshot.isEmpty()) {
            maven { url Urls.composeSnapshotRepo }
            maven { url Urls.mavenCentralSnapshotRepo }
        }
    }

    tasks.withType(KotlinCompile).configureEach {
        kotlinOptions {
            // Treat all Kotlin warnings as errors
            allWarningsAsErrors = true

            jvmTarget = Libs.Build.Kotlin.jvmTarget

            // Use experimental APIs
            freeCompilerArgs += '-Xopt-in=kotlin.RequiresOptIn'
            freeCompilerArgs += '-Xopt-in=kotlin.time.ExperimentalTime'
        }
    }
}

// https://github.com/ben-manes/gradle-versions-plugin
def isUnstable = { String version ->
    def unstableKeyword = ['ALPHA', 'BETA', 'RC'].any { it -> version.toUpperCase().contains(it) }
    return unstableKeyword
}

tasks.named("dependencyUpdates").configure {
    rejectVersionIf {
        isUnstable(it.candidate.version)
    }
}
